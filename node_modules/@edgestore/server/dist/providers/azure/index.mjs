import { BlobServiceClient } from '@azure/storage-blob';
import { v4 } from 'uuid';

function AzureProvider(options) {
    const { storageAccountName = process.env.ES_AZURE_ACCOUNT_NAME, sasToken = process.env.ES_AZURE_SAS_TOKEN, containerName = process.env.ES_AZURE_CONTAINER_NAME } = options ?? {};
    const baseUrl = `https://${storageAccountName}.blob.core.windows.net`;
    const blobServiceClient = new BlobServiceClient(`${baseUrl}?${sasToken}`);
    const containerClient = blobServiceClient.getContainerClient(containerName ?? '');
    return {
        async init () {
            return {};
        },
        getBaseUrl () {
            return baseUrl;
        },
        async getFile ({ url }) {
            const blobClient = containerClient.getBlobClient(url);
            const { contentLength, lastModified } = await blobClient.getProperties();
            return {
                url: url,
                metadata: {},
                path: {},
                size: contentLength ?? 0,
                uploadedAt: lastModified ?? new Date()
            };
        },
        async requestUpload ({ fileInfo }) {
            const nameId = v4();
            const extension = fileInfo.extension ? `.${fileInfo.extension.replace('.', '')}` : '';
            const fileName = fileInfo.fileName ?? `${nameId}${extension}`;
            const blobClient = containerClient.getBlobClient(fileName);
            const url = blobClient.url;
            return {
                uploadUrl: url,
                accessUrl: url
            };
        },
        async requestUploadParts () {
            throw new Error('Not implemented');
        },
        async completeMultipartUpload () {
            throw new Error('Not implemented');
        },
        async confirmUpload () {
            throw new Error('Not implemented');
        },
        async deleteFile ({ url }) {
            const blobClient = containerClient.getBlobClient(url);
            await blobClient.delete();
            return {
                success: true
            };
        }
    };
}

export { AzureProvider };

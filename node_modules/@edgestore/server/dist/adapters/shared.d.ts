import { type AnyBuilder, type EdgeStoreRouter, type Provider, type SharedDeleteFileRes, type SharedInitRes, type SharedRequestUploadPartsRes, type SharedRequestUploadRes } from '@edgestore/shared';
export declare function init<TCtx>(params: {
    provider: Provider;
    router: EdgeStoreRouter<TCtx>;
    ctx: TCtx;
}): Promise<SharedInitRes>;
export type RequestUploadBody = {
    bucketName: string;
    input: any;
    fileInfo: {
        size: number;
        type: string;
        extension: string;
        fileName?: string;
        replaceTargetUrl?: string;
        temporary: boolean;
    };
};
export declare function requestUpload<TCtx>(params: {
    provider: Provider;
    router: EdgeStoreRouter<TCtx>;
    ctxToken: string | undefined;
    body: RequestUploadBody;
}): Promise<SharedRequestUploadRes>;
export type RequestUploadPartsParams = {
    multipart: {
        uploadId: string;
        parts: number[];
    };
    path: string;
};
export declare function requestUploadParts<TCtx>(params: {
    provider: Provider;
    router: EdgeStoreRouter<TCtx>;
    ctxToken: string | undefined;
    body: RequestUploadPartsParams;
}): Promise<SharedRequestUploadPartsRes>;
export type CompleteMultipartUploadBody = {
    bucketName: string;
    uploadId: string;
    key: string;
    parts: {
        partNumber: number;
        eTag: string;
    }[];
};
export declare function completeMultipartUpload<TCtx>(params: {
    provider: Provider;
    router: EdgeStoreRouter<TCtx>;
    ctxToken: string | undefined;
    body: CompleteMultipartUploadBody;
}): Promise<import("@edgestore/shared").CompleteMultipartUploadRes>;
export type ConfirmUploadBody = {
    bucketName: string;
    url: string;
};
export declare function confirmUpload<TCtx>(params: {
    provider: Provider;
    router: EdgeStoreRouter<TCtx>;
    ctxToken: string | undefined;
    body: ConfirmUploadBody;
}): Promise<import("@edgestore/shared").ConfirmUploadRes>;
export type DeleteFileBody = {
    bucketName: string;
    url: string;
};
export declare function deleteFile<TCtx>(params: {
    provider: Provider;
    router: EdgeStoreRouter<TCtx>;
    ctxToken: string | undefined;
    body: DeleteFileBody;
}): Promise<SharedDeleteFileRes>;
export declare function buildPath(params: {
    fileInfo: RequestUploadBody['fileInfo'];
    bucket: AnyBuilder;
    pathAttrs: {
        ctx: any;
        input: any;
    };
}): {
    key: string;
    value: string;
}[];
export declare function parsePath(path: {
    key: string;
    value: string;
}[]): {
    parsedPath: Record<string, string>;
    pathOrder: string[];
};
//# sourceMappingURL=shared.d.ts.map
import { IAnalyticsOptions } from '@cloudinary/url-gen/sdkAnalytics/interfaces/IAnalyticsOptions';
import ICloudinaryConfigurations from '@cloudinary/url-gen/config/interfaces/Config/ICloudinaryConfigurations';

interface AssetOptionsResize {
    crop?: string;
    width?: number | string;
}
interface AssetOptions {
    aspectRatio?: string | number;
    assetType?: string;
    crop?: string;
    deliveryType?: string;
    dpr?: number | string;
    effects?: Array<any>;
    flags?: Array<string> | object;
    format?: string;
    gravity?: string;
    height?: string | number;
    overlays?: Array<any>;
    quality?: number | string;
    rawTransformations?: string[];
    removeBackground?: boolean;
    sanitize?: boolean;
    resize?: AssetOptionsResize;
    seoSuffix?: string;
    strictTransformations?: boolean;
    src: string;
    text?: any;
    transformations?: Array<string>;
    underlay?: string;
    underlays?: Array<any>;
    version?: number | string;
    width?: string | number;
    widthResize?: string | number;
    zoom?: string;
}

interface ImageOptionsFillBackground {
    crop?: string;
    gravity?: string;
    prompt?: string;
}
interface ImageOptionsResize extends AssetOptionsResize {
}
interface ImageOptionsGenerativeReplace {
    to: string;
    from: string;
    preserveGeometry?: boolean;
}
type ImageOptionsRecolorPrompt = string | Array<string>;
interface ImageOptionsRecolor {
    prompt?: ImageOptionsRecolorPrompt;
    to?: string;
    multiple?: boolean;
}
type ImageOptionsRemovePrompt = string | Array<string>;
type ImageOptionsRemoveRegion = Array<number> | Array<Array<number>>;
interface ImageOptionsRemove {
    prompt?: ImageOptionsRemovePrompt;
    region?: [300, 200, 1900, 3500];
    multiple?: boolean;
    removeShadow?: boolean;
}
interface ImageOptionsZoomPan {
    loop: string | boolean;
    options: string;
}
interface ImageOptions extends AssetOptions {
    defaultImage?: string;
    fillBackground?: boolean | ImageOptionsFillBackground;
    recolor?: ImageOptionsRecolorPrompt | ImageOptionsRecolor;
    remove?: ImageOptionsRemovePrompt | ImageOptionsRemove;
    replace?: Array<string | boolean> | ImageOptionsGenerativeReplace;
    restore?: boolean;
    zoompan?: string | boolean | ImageOptionsZoomPan;
}

interface VideoOptionsResize extends AssetOptionsResize {
}
interface VideoOptions extends AssetOptions {
    streamingProfile?: string;
}

type AllOptions = AssetOptions | ImageOptions | VideoOptions;
interface PluginSettings<Options extends AllOptions = AllOptions> {
    cldAsset: any;
    options: Options;
}
interface PluginOverrides {
    format?: string;
    width?: number;
}

declare const props$1: string[];
declare const assetTypes$1: string[];
declare function plugin$1(props: PluginSettings<ImageOptions>): {};

declare namespace defaultImagePlugin {
  export {
    props$1 as props,
    assetTypes$1 as assetTypes,
    plugin$1 as plugin,
  };
}

declare const props: string[];
declare const assetTypes: string[];
declare function plugin(props: PluginSettings<VideoOptions>): {};

declare const videoPlugin_props: typeof props;
declare const videoPlugin_assetTypes: typeof assetTypes;
declare const videoPlugin_plugin: typeof plugin;
declare namespace videoPlugin {
  export {
    videoPlugin_props as props,
    videoPlugin_assetTypes as assetTypes,
    videoPlugin_plugin as plugin,
  };
}

interface AnalyticsOptions extends IAnalyticsOptions {
}

interface ConfigOptions extends ICloudinaryConfigurations {
}

declare const transformationPlugins: (typeof defaultImagePlugin | typeof videoPlugin)[];
/**
 * constructCloudinaryUrl
 * @description Builds a full Cloudinary URL using transformation plugins specified by options
 */
interface ConstructUrlProps {
    options: ImageOptions;
    config?: ConfigOptions;
    analytics?: AnalyticsOptions | false;
}
interface PluginOptionsResize {
    width?: string | number;
}
interface PluginOptions {
    format?: string;
    resize?: PluginOptionsResize;
    width?: string | number;
}
interface PluginResults {
    options?: PluginOptions;
}
declare function constructCloudinaryUrl({ options, config, analytics }: ConstructUrlProps): string;

interface QualiferConverters {
    test: Function;
    convert: Function;
}
interface Qualifier {
    location?: string;
    order?: number;
    prefix?: string;
    qualifier?: string | boolean;
    converters?: Array<QualiferConverters>;
}

declare const primary: Record<string, Qualifier>;
declare const position: Record<string, Qualifier>;
declare const text: Record<string, Qualifier>;
declare const effects: Record<string, Qualifier>;

export { AnalyticsOptions, AssetOptions, AssetOptionsResize, ConfigOptions, ConstructUrlProps, ImageOptions, ImageOptionsFillBackground, ImageOptionsGenerativeReplace, ImageOptionsRecolor, ImageOptionsRecolorPrompt, ImageOptionsRemove, ImageOptionsRemovePrompt, ImageOptionsRemoveRegion, ImageOptionsResize, ImageOptionsZoomPan, PluginOptions, PluginOptionsResize, PluginOverrides, PluginResults, PluginSettings, QualiferConverters, Qualifier, VideoOptions, VideoOptionsResize, constructCloudinaryUrl, effects, position, primary, text, transformationPlugins };

/* eslint-disable no-console */
const logLevel = ['debug', 'info', 'warn', 'error', 'none'];
class Logger {
    constructor(logLevel) {
        this.logLevel =
            logLevel ?? (process.env.NODE_ENV === 'production' ? 'error' : 'info');
    }
    shouldLog(level) {
        return logLevel.indexOf(level) >= logLevel.indexOf(this.logLevel);
    }
    debug(message, ...optionalParams) {
        if (this.shouldLog('debug')) {
            console.debug('[EdgeStoreDebug]', message, ...optionalParams);
        }
    }
    info(message, ...optionalParams) {
        if (this.shouldLog('info')) {
            console.info('[EdgeStoreInfo]', message, ...optionalParams);
        }
    }
    warn(message, ...optionalParams) {
        if (this.shouldLog('warn')) {
            console.warn('[EdgeStoreWarn]', message, ...optionalParams);
        }
    }
    error(message, ...optionalParams) {
        if (this.shouldLog('error')) {
            console.error('[EdgeStoreError]', message, ...optionalParams);
        }
    }
}

export { Logger as L };
